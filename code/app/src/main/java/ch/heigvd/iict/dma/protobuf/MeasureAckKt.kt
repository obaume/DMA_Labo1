// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: measures.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ch.heigvd.iict.dma.protobuf;

@kotlin.jvm.JvmName("-initializemeasureAck")
public inline fun measureAck(block: ch.heigvd.iict.dma.protobuf.MeasureAckKt.Dsl.() -> kotlin.Unit): ch.heigvd.iict.dma.protobuf.MeasuresOuterClass.MeasureAck =
  ch.heigvd.iict.dma.protobuf.MeasureAckKt.Dsl._create(ch.heigvd.iict.dma.protobuf.MeasuresOuterClass.MeasureAck.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `MeasureAck`
 */
public object MeasureAckKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ch.heigvd.iict.dma.protobuf.MeasuresOuterClass.MeasureAck.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ch.heigvd.iict.dma.protobuf.MeasuresOuterClass.MeasureAck.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ch.heigvd.iict.dma.protobuf.MeasuresOuterClass.MeasureAck = _builder.build()

    /**
     * `uint32 id = 1;`
     */
    public var id: kotlin.Int
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * `uint32 id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * `.Status status = 2;`
     */
    public var status: ch.heigvd.iict.dma.protobuf.MeasuresOuterClass.Status
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    public var statusValue: kotlin.Int
      @JvmName("getStatusValue")
      get() = _builder.getStatusValue()
      @JvmName("setStatusValue")
      set(value) {
        _builder.setStatusValue(value)
      }
    /**
     * `.Status status = 2;`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ch.heigvd.iict.dma.protobuf.MeasuresOuterClass.MeasureAck.copy(block: `ch.heigvd.iict.dma.protobuf`.MeasureAckKt.Dsl.() -> kotlin.Unit): ch.heigvd.iict.dma.protobuf.MeasuresOuterClass.MeasureAck =
  `ch.heigvd.iict.dma.protobuf`.MeasureAckKt.Dsl._create(this.toBuilder()).apply { block() }._build()

